<?

interface Coffee
{
    public function cost();
}

/**
 * Class Express
 * 原本基础类
 */
class Express implements Coffee
{
    public function cost()
    {
        return 2.5;
    }
}

/**
 * Class Dressing
 * 装饰
 */
class Dressing implements Coffee
{

    public function __construct(Coffee $coffee)
    {
        $this->coffee = $coffee;
    }

    public function cost()
    {
        // TODO: Implement cost() method.
        return $this->coffee->cost();
    }

}

class Whip extends Dressing
{
    public function __construct(Coffee $coffee)
    {
        parent::__construct($coffee);
    }

    public function cost()
    {
        return parent::cost() + 0.1; // TODO: Change the autogenerated stub
    }
}

class  Moca extends Dressing
{
    public function __construct(Coffee $coffee)
    {
        parent::__construct($coffee);
    }

    public function cost()
    {
        return parent::cost() + 0.5; // TODO: Change the autogenerated stub
    }
}

$coffee = new Express();
$coffee = new Moca($coffee);
$coffee = new Moca($coffee);
$coffee = new Whip($coffee);
print_r($coffee->cost());

?>